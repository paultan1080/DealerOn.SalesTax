// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DealerOn.SalesTax.Domain.Sqlite.Migrations
{
    [DbContext(typeof(SalesTaxDbContext))]
    [Migration("20240906184104_TaxIdFix")]
    partial class TaxIdFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ClassifierDefinitionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TraitType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TraitValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ClassifierDefinitions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Pattern = "imported",
                            TraitType = "ItemIsImported",
                            TraitValue = "",
                            Type = "Keyword"
                        },
                        new
                        {
                            Id = 2,
                            Pattern = "book",
                            TraitType = "ItemCategory",
                            TraitValue = "Books",
                            Type = "Keyword"
                        },
                        new
                        {
                            Id = 3,
                            Pattern = "chocolate",
                            TraitType = "ItemCategory",
                            TraitValue = "Food",
                            Type = "Keyword"
                        },
                        new
                        {
                            Id = 4,
                            Pattern = "pills",
                            TraitType = "ItemCategory",
                            TraitValue = "Medical",
                            Type = "Keyword"
                        });
                });

            modelBuilder.Entity("TaxConfigEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ImportDutyRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SalesTaxRate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TaxConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImportDutyRate = 0.05m,
                            SalesTaxRate = 0.10m
                        });
                });

            modelBuilder.Entity("TaxExemptCategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaxConfigEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaxConfigEntityId");

                    b.ToTable("TaxExemptCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Food",
                            TaxConfigEntityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Books",
                            TaxConfigEntityId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Medical",
                            TaxConfigEntityId = 1
                        });
                });

            modelBuilder.Entity("TaxExemptCategoryEntity", b =>
                {
                    b.HasOne("TaxConfigEntity", null)
                        .WithMany("ExemptCategories")
                        .HasForeignKey("TaxConfigEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaxConfigEntity", b =>
                {
                    b.Navigation("ExemptCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
